// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------------------- //
// rotational_shift_ISR //
// -------------------- //

#define rotational_shift_ISR_wrap_target 0
#define rotational_shift_ISR_wrap 18

static const uint16_t rotational_shift_ISR_program_instructions[] = {
    //     .wrap_target
    0x80a0, //  0: pull   block
    0xa0c7, //  1: mov    isr, osr
    0xa046, //  2: mov    y, isr
    0x8020, //  3: push   block
    0xa0c2, //  4: mov    isr, y
    0xe03f, //  5: set    x, 31
    0x40c1, //  6: in     isr, 1
    0xa046, //  7: mov    y, isr
    0x8020, //  8: push   block
    0xa0c2, //  9: mov    isr, y
    0x0046, // 10: jmp    x--, 6
    0xe03f, // 11: set    x, 31
    0xa0d6, // 12: mov    isr, ::isr
    0x40c1, // 13: in     isr, 1
    0xa0d6, // 14: mov    isr, ::isr
    0xa046, // 15: mov    y, isr
    0x8020, // 16: push   block
    0xa0c2, // 17: mov    isr, y
    0x004c, // 18: jmp    x--, 12
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program rotational_shift_ISR_program = {
    .instructions = rotational_shift_ISR_program_instructions,
    .length = 19,
    .origin = -1,
};

static inline pio_sm_config rotational_shift_ISR_program_get_default_config(uint offset)
{
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + rotational_shift_ISR_wrap_target, offset + rotational_shift_ISR_wrap);
    return c;
}
#endif
