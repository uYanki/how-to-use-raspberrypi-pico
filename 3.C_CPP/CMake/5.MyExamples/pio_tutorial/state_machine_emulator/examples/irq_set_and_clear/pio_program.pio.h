// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------ //
// tester //
// ------ //

#define tester_wrap_target 0
#define tester_wrap 15

static const uint16_t tester_program_instructions[] = {
    //     .wrap_target
    0xc000, //  0: irq    nowait 0
    0xc001, //  1: irq    nowait 1
    0xc002, //  2: irq    nowait 2
    0xc003, //  3: irq    nowait 3
    0xc004, //  4: irq    nowait 4
    0xc005, //  5: irq    nowait 5
    0xc006, //  6: irq    nowait 6
    0xc007, //  7: irq    nowait 7
    0xc020, //  8: irq    wait 0
    0xc021, //  9: irq    wait 1
    0xc022, //  10: irq    wait 2
    0xc023, //  11: irq    wait 3
    0xc024, //  12: irq    wait 4
    0xc025, //  13: irq    wait 5
    0xc026, //  14: irq    wait 6
    0xc027, //  15: irq    wait 7
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program tester_program = {
    .instructions = tester_program_instructions,
    .length = 16,
    .origin = -1,
};

static inline pio_sm_config tester_program_get_default_config(uint offset)
{
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + tester_wrap_target, offset + tester_wrap);
    return c;
}
#endif
