// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------ //
// tester //
// ------ //

#define tester_wrap_target 0
#define tester_wrap 15

static const uint16_t tester_program_instructions[] = {
    //     .wrap_target
    0x80a0, //  0: pull   block
    0xa027, //  1: mov    x, osr
    0xa0c1, //  2: mov    isr, x
    0x80a0, //  3: pull   block
    0xa047, //  4: mov    y, osr
    0x0089, //  5: jmp    y--, 9
    0xa0c3, //  6: mov    isr, null
    0x8020, //  7: push   block
    0x0000, //  8: jmp    0
    0xa0e2, //  9: mov    osr, y
    0xa04b, // 10: mov    y, !null
    0x0050, // 11: jmp    x--, 16
    0xa027, // 12: mov    x, osr
    0x0054, // 13: jmp    x--, 20
    0xa0ca, // 14: mov    isr, !y
    0x8020, // 15: push   block
            //     .wrap
    0x008b, // 16: jmp    y--, 11
    0xa0cb, // 17: mov    isr, !null
    0x8020, // 18: push   block
    0x0000, // 19: jmp    0
    0xa0e1, // 20: mov    osr, x
    0xa026, // 21: mov    x, isr
    0x000b, // 22: jmp    11
};

#if !PICO_NO_HARDWARE
static const struct pio_program tester_program = {
    .instructions = tester_program_instructions,
    .length = 23,
    .origin = -1,
};

// sm_config_set_sideset(&c, 2, true, true);
static inline pio_sm_config tester_program_get_default_config(uint offset)
{
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + tester_wrap_target, offset + tester_wrap);
    return c;
}
#endif
