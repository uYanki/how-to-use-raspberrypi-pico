;***************************************************
; Title     : 10BASE-T manchester receiver
; Date      : 2022/11/13
; Design    : kingyo
; Note      : Based on the example below.
;             https://github.com/raspberrypi/pico-examples/blob/master/pio/manchester_encoding/manchester_encoding.pio
;***************************************************

.program des_10base_t

; Assumes line is idle low, first bit is 0
; One bit is 12 cycles
; a '0' is encoded as 10
; a '1' is encoded as 01
;
; Both the IN base and the JMP pin mapping must be pointed at the GPIO used for RX.
; Autopush must be enabled.
; Before enabling the SM, it should be placed in a 'wait 1, pin` state, so that
; it will not start sampling until the initial line idle state ends.

start_of_0:            ; We are 0.25 bits into a 0 - signal is high
    wait 0 pin 0       ; Wait for the 1->0 transition - at this point we are 0.5 into the bit
    in y, 1 [6]        ; Emit a 0, sleep 3/4 of a bit
    set pins, 0     ; Debug!!!
    jmp pin start_of_0 ; If signal is 1 again, it's another 0 bit, otherwise it's a 1

.wrap_target
start_of_1:            ; We are 0.25 bits into a 1 - signal is 1   
    wait 1 pin 0       ; Wait for the 0->1 transition - at this point we are 0.5 into the bit
    in x, 1 [6]        ; Emit a 1, sleep 3/4 of a bit
    set pins, 1     ; Debug!!!
    jmp pin start_of_0 ; If signal is 0 again, it's another 1 bit otherwise it's a 0
.wrap


% c-sdk {

    static inline void des_10base_t_program_init(PIO pio, uint sm, uint offset, uint pin_rx, uint pin_dbg)
    {
        pio_sm_set_consecutive_pindirs(pio, sm, pin_rx, 1, false);
        pio_gpio_init(pio, pin_rx);

        pio_sm_config c = des_10base_t_program_get_default_config(offset);
        sm_config_set_in_pins(&c, pin_rx); // for WAIT
        sm_config_set_jmp_pin(&c, pin_rx); // for JMP
        sm_config_set_in_shift(&c, true, true, 32);
        sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_RX);
        sm_config_set_clkdiv(&c, 2.0f);

        // for Debug
        sm_config_set_out_pins(&c, pin_dbg, 1);
        sm_config_set_set_pins(&c, pin_dbg, 1);
        pio_gpio_init(pio, pin_dbg);
        pio_sm_set_consecutive_pindirs(pio, sm, pin_dbg, 1, true);

        pio_sm_init(pio, sm, offset, &c);

        // X and Y are set to 0 and 1, to conveniently emit these to ISR/FIFO.
        pio_sm_exec(pio, sm, pio_encode_set(pio_x, 1));
        pio_sm_exec(pio, sm, pio_encode_set(pio_y, 0));

        // Assume line is idle low, and first transmitted bit is 0. Put SM in a
        // wait state before enabling. RX will begin once the first 0 symbol is
        // detected.
        pio_sm_exec(pio, sm, pio_encode_wait_pin(1, 0) | pio_encode_delay(2));
        pio_sm_set_enabled(pio, sm, true);
    }

%}
